apiVersion: v1
kind: ConfigMap
metadata:
  name: client-nginx-config
data:
  default.conf: |
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
    
    server {
        listen 80;
        server_name localhost;
        
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
        }
        
        # Proxy API requests to the backend
        location /api {
            proxy_pass http://lynk-server:9001;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
            
            # For OPTIONS preflight, just return 204
            if ($request_method = OPTIONS) {
                return 204;
            }
        }
        
        # Socket.IO specific configuration
        location /socket.io/ {
            proxy_pass http://lynk-server:9001;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_cache_bypass $http_upgrade;
            # Longer timeouts for socket.io
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
        }
        
        
        location /uploads/ {

          proxy_pass http://lynk-server:9001;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;

    }
        
        # CORS headers for all responses
        add_header Access-Control-Allow-Origin    $http_origin    always;
        add_header Access-Control-Allow-Methods   "GET, POST, OPTIONS, PUT, DELETE"  always;
        add_header Access-Control-Allow-Headers   "X-Requested-With,Content-Type,Authorization"  always;
        add_header Access-Control-Allow-Credentials "true"  always;
    }
